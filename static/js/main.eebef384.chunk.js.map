{"version":3,"sources":["containers/Header.js","containers/components/index.js","actions.js","containers/UserInfo.js","containers/components/Indicators.js","containers/components/AddCourse.js","containers/components/ScoreCard.js","containers/components/NewRound.js","containers/components/AnalyticsBar.js","containers/components/AnalyticsLine.js","containers/components/AnalyticsScoreCard.js","containers/components/Carousel.js","containers/Content.js","containers/Main.js","App.js","reducers.js","index.js"],"names":["Header","className","resetInputFields","Array","from","document","querySelectorAll","classList","remove","querySelector","resetRoundInputFields","initializingUserInfo","dispatch","type","fetch","process","REACT_APP_BACKEND_URL","method","headers","then","res","json","data","payload","catch","error","updateCourse","course","updateHoles","holes","updateButtonClicked","buttonClicked","updateBoxChecked","boxChecked","updateSlide","slide","connect","state","user","initializeUserInfo","year","updateInputDate","onUpdateInputYear","event","body","JSON","stringify","console","log","updateInputYear","target","innerText","props","toggleSeason","toggle","username","onMouseOver","onMouseLeave","seasons","map","season","index","key","onClick","e","length","handicap","lowest","average","highest","rounds","courses","style","visibility","reset","updateSlideNumber","slides","onUpdateSlide","slideNumber","parseInt","getAttribute","sl","value","onUpdateCourse","onUpdateHoles","onUpdateBoxChecked","onUpdateButtonClicked","onInitializingUserInfo","useState","numOfHoles","setNumOfHoles","useEffect","addEventListener","keyCode","parentElement","id","htmlFor","name","required","onChange","scope","min","max","add","input","checkInputFields","filter","disabled","courseName","totalHoles","rating","slope","par","pars","obj","start","finish","i","slice","status","window","confirm","ScoreCard","hole","p","setCourse","updateNewRoundState","limitTo18Holes","checkboxes","checkbox","checked","nextSibling","textContent","onCheck","defaultValue","moment","Date","format","checkRoundInputFields","playedOn","split","item","totalScore","reduce","total","num","scores","scoreCount","updateScoreCount","ctx","Chart","labels","Object","keys","score","charAt","toUpperCase","datasets","values","backgroundColor","options","legend","display","scales","xAxes","gridLines","color","yAxes","ticks","suggestedMin","suggestedMax","eagle","birdie","bogey","double","triple","quad","linePlot","updateLinePlotState","getContext","xAxis","point","yAxis","pointRadius","pointBorderColor","scorecard","updateScorecardState","colSpan","s","renderSwitch","newSlide","Content","Main","React","Component","isPending","onload","initialStateUserInfo","initialNewRoundState","initialInputYearState","getFullYear","initialSlideState","initialScoreCountState","initialLinePlotState","initialScorecardState","toLocaleDateString","rootReducer","combineReducers","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eebef384.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Header.css';\r\n\r\nfunction Header(){\r\n  return(\r\n    <div className=\"header bg-success d-flex align-items-center\">\r\n      <div className=\"h1 text-light\">My Golf Tracker</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","export const checkInputFields = () => {\r\n  if(document.querySelector(\"#numOfHoles\").value === \"\"){\r\n    document.querySelector(\"#numOfHoles\").classList.add(\"border\", \"border-danger\")\r\n  } else{\r\n    document.querySelector(\"#numOfHoles\").classList.remove(\"border\", \"border-danger\")\r\n  }\r\n\r\n  for(let input of Array.from(document.querySelectorAll(\"#course-form input\"))){\r\n    if(input.value === \"\"){\r\n      input.classList.add(\"border\", \"border-danger\")\r\n    } else{\r\n      input.classList.remove(\"border\", \"border-danger\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetInputFields = () => {\r\n  for(let input of Array.from(document.querySelectorAll(\"#course-form input\"))){\r\n    input.classList.remove(\"border\", \"border-danger\")\r\n  }\r\n  document.querySelector(\"#numOfHoles\").classList.remove(\"border\", \"border-danger\")\r\n}\r\n\r\nexport const checkRoundInputFields = () => {\r\n  for(let input of Array.from(document.querySelectorAll(\"#new-round-form input\"))){\r\n    if(input.value === \"\"){\r\n      input.classList.add(\"border\", \"border-danger\")\r\n    } else{\r\n      input.classList.remove(\"border\", \"border-danger\")\r\n    }\r\n  }\r\n}\r\n\r\nexport const resetRoundInputFields = () => {\r\n  for(let input of Array.from(document.querySelectorAll(\"#new-round-form input\"))){\r\n    input.classList.remove(\"border\", \"border-danger\")\r\n  }\r\n}\r\n","export const initializingUserInfo = () => (dispatch) => {\r\n  dispatch({type: \"GET_PENDING\"})\r\n  fetch(process.env.REACT_APP_BACKEND_URL || \"https://ikim91-golf-tracker-api.herokuapp.com\", {\r\n    method: 'get',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    dispatch({ type: \"GET_SUCCESS\", payload: data})\r\n    dispatch({type: \"CHANGE_DATE\", payload: data})\r\n    dispatch({type: \"CHANGE_SCORE_COUNT\", payload: data})\r\n    dispatch({type: \"CHANGE_LINE_PLOT_STATE\", payload: data})\r\n    dispatch({type: \"CHANGE_SCORECARD_STATE\", payload: data})\r\n  })\r\n  .catch(error => dispatch({ type: \"GET_ERROR\", payload: error}))\r\n}\r\n\r\nexport const updateInputYear = (user, year) => (dispatch) => {\r\n  dispatch({type: \"GET_PENDING\"})\r\n  fetch(`${process.env.REACT_APP_BACKEND_URL || \"https://ikim91-golf-tracker-api.herokuapp.com\"}/season`, {\r\n    method: 'post',\r\n    headers:{\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ user, year })\r\n  })\r\n  .then(res => res.json())\r\n  .then((data) => {\r\n    console.log(data)\r\n    dispatch({type: \"GET_SUCCESS\", payload: data})\r\n    dispatch({type: \"CHANGE_DATE\", payload: data})\r\n    dispatch({type: \"CHANGE_SCORE_COUNT\", payload: data})\r\n    dispatch({type: \"CHANGE_LINE_PLOT_STATE\", payload: data})\r\n    dispatch({type: \"CHANGE_SCORECARD_STATE\", payload: data})\r\n  })\r\n  .catch(error => dispatch({ type: \"GET_ERROR\", payload: error}))\r\n}\r\n\r\nexport const updateCourse = (course => ({type: \"SET_COURSE\", payload: course}))\r\nexport const updateHoles = (holes => ({type: \"SET_HOLES\", payload: holes}))\r\nexport const updateButtonClicked = (buttonClicked => ({type: \"BUTTON_CLICKED\", payload: buttonClicked}))\r\nexport const updateBoxChecked = (boxChecked => ({type: \"BOX_CHECKED\", payload: boxChecked}))\r\n\r\nexport const updateSlide = (slide => ({type: \"CHANGE_SLIDE\", payload: slide}))\r\n\r\nexport const updateCount = (scoreCount => ({type: \"CHANGE_SCORE_COUNT\", payload: scoreCount}))\r\n\r\nexport const updateLinePlot = (linePlot => ({type: \"CHANGE_LINE_PLOT_STATE\", payload: linePlot}))\r\n\r\nexport const updateScorecard = (scorecard => ({type: \"CHANGE_SCORECARD_STATE\", payload: scorecard}))\r\n","import React from 'react';\r\nimport { resetInputFields, resetRoundInputFields } from './components/index';\r\nimport { connect } from 'react-redux';\r\nimport { updateInputYear } from './../actions';\r\n\r\nimport './css/UserInfo.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    user: state.initializeUserInfo.user,\r\n    year: state.updateInputDate.year\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onUpdateInputYear: (user, event) => {\r\n      dispatch(updateInputYear(user, event.target.innerText))\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserInfo(props){\r\n\r\n  const { user, year, onUpdateInputYear } = props\r\n\r\n  const openModal = () => {\r\n    document.querySelector(\".addcourse-modal\").style.visibility = \"visible\";\r\n    document.querySelector(\".carousel-indicators\").style.visibility = \"hidden\";\r\n    document.querySelector(\"#course-form\").reset();\r\n\r\n    if(document.querySelector(\".new-round-modal\").style.visibility === \"visible\"){\r\n      document.querySelector(\".new-round-modal\").style.visibility = \"hidden\";\r\n      document.querySelector(\"#new-round-form\").reset()\r\n    }\r\n    resetRoundInputFields()\r\n  }\r\n\r\n  const openRoundModal = () => {\r\n    document.querySelector(\".new-round-modal\").style.visibility = \"visible\";\r\n    document.querySelector(\".carousel-indicators\").style.visibility = \"hidden\";\r\n    document.querySelector(\"#new-round-form\").reset()\r\n\r\n    if(document.querySelector(\".addcourse-modal\").style.visibility === \"visible\"){\r\n      document.querySelector(\".addcourse-modal\").style.visibility = \"hidden\";\r\n      document.querySelector(\"#course-form\").reset();\r\n    }\r\n    resetInputFields()\r\n\r\n  }\r\n\r\n  const toggleSeason = () => {\r\n    document.querySelector(\".dropdown-menu\").classList.toggle(\"show\")\r\n  }\r\n\r\n  return(\r\n    <div className='userinfo bg-success border-dark'>\r\n      <div className=\"user text-light\">\r\n        <h2 className=\"username\">{user.username}</h2>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn btn-success dropdown-toggle\" onMouseOver={toggleSeason} onMouseLeave={toggleSeason}>\r\n            {year}\r\n          </button>\r\n          <div className=\"dropdown-menu\" onMouseLeave={toggleSeason}>\r\n            {user.seasons.map((season, index) => <div className=\"dropdown-item\" key={index} onClick={(e) => {onUpdateInputYear(user, e)}}>{season.season}</div>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"handicap text-light\">\r\n        <div>Handicap</div>\r\n        <div>{user.seasons[user.seasons.length -1].handicap}</div>\r\n      </div>\r\n      <div className=\"stats text-light\">\r\n        <div>Best</div>\r\n        <div>Average</div>\r\n        <div>Worst</div>\r\n        <div>{user.seasons[user.seasons.length - 1].lowest}</div>\r\n        <div>{user.seasons[user.seasons.length - 1].average}</div>\r\n        <div>{user.seasons[user.seasons.length - 1].highest}</div>\r\n      </div>\r\n      <div className=\"counts text-light\">\r\n        <div>Rounds</div>\r\n        <div>Courses</div>\r\n        <div>{user.seasons[user.seasons.length - 1].rounds}</div>\r\n        <div>{user.seasons[user.seasons.length - 1].courses}</div>\r\n      </div>\r\n      <div className=\"functionality text-light\">\r\n        <div><button type=\"button\" className=\"func-button btn btn-block btn-outline-light btn-lg\" onClick={openRoundModal}>New Round</button></div>\r\n        <div><button type=\"button\" className=\"func-button d-inline-block btn btn-block btn-outline-light btn-lg\" onClick={openModal}>Add Course</button></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateSlide } from './../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    slide: state.updateSlideNumber.slide,\r\n    slides: state.updateSlideNumber.slides\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onUpdateSlide: (e) => {\r\n      const slideNumber = parseInt(e.target.getAttribute(\"value\"))\r\n      dispatch(updateSlide(slideNumber))\r\n    }\r\n  }\r\n}\r\n\r\nfunction Indicators(props){\r\n\r\n  const { onUpdateSlide, slides, slide } = props\r\n\r\n  return(\r\n    <ol className=\"carousel-indicators\">\r\n      {\r\n        slides.map(sl => {\r\n          if(sl === slide){\r\n            return(<li className=\"active\" value={sl} key={sl} onClick={onUpdateSlide}></li>)\r\n          } else{\r\n            return(<li value={sl} key={sl} onClick={onUpdateSlide}></li>)\r\n          }\r\n        })\r\n      }\r\n    </ol>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { checkInputFields, resetInputFields, resetRoundInputFields } from './index.js';\r\nimport { connect } from 'react-redux';\r\nimport { updateCourse, updateHoles, updateBoxChecked, updateButtonClicked, initializingUserInfo } from './../../actions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onUpdateCourse: (course) => {\r\n      dispatch(updateCourse(course))\r\n    },\r\n    onUpdateHoles: (holes) => {\r\n      dispatch(updateHoles(holes))\r\n    },\r\n    onUpdateBoxChecked: (boxChecked) => {\r\n      dispatch(updateBoxChecked(boxChecked))\r\n    },\r\n    onUpdateButtonClicked: (buttonClicked) => {\r\n      dispatch(updateButtonClicked(buttonClicked))\r\n    },\r\n    onInitializingUserInfo: () => {\r\n      dispatch(initializingUserInfo())\r\n    }\r\n  }\r\n}\r\n\r\nfunction AddCourse(props){\r\n\r\n  const { onUpdateCourse, onUpdateHoles, onUpdateBoxChecked, onUpdateButtonClicked, onInitializingUserInfo } = props\r\n\r\n  const [numOfHoles, setNumOfHoles] = useState(\"18\")\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", function(e){\r\n      if(e.keyCode === 27){\r\n        document.querySelector(\".addcourse-modal\").style.visibility = \"hidden\"\r\n        document.querySelector(\"#course-form\").reset()\r\n\r\n        document.querySelector(\".new-round-modal\").style.visibility = \"hidden\"\r\n        document.querySelector(\"#new-round-form\").reset()\r\n\r\n        document.querySelector(\".carousel-indicators\").style.visibility = \"visible\";\r\n\r\n        resetInputFields()\r\n        resetRoundInputFields()\r\n        onUpdateButtonClicked(false)\r\n        onUpdateCourse({})\r\n        onUpdateBoxChecked(false)\r\n        onUpdateHoles([])\r\n      }\r\n    })\r\n  })\r\n\r\n  const handleSelectChange = (e) => {\r\n    setNumOfHoles(e.target.value)\r\n  }\r\n\r\n  const closeModal = (e) => {\r\n    e.target.parentElement.style.visibility = \"hidden\";\r\n    document.querySelector(\"#course-form\").reset()\r\n    document.querySelector(\".carousel-indicators\").style.visibility = \"visible\";\r\n\r\n    resetInputFields()\r\n  }\r\n\r\n  const submitData = (e) => {\r\n\r\n    checkInputFields()\r\n\r\n    if(document.querySelector(\"#numOfHoles\").value !== \"\"\r\n        &&\r\n      Array.from(document.querySelectorAll(\"#course-form input\")).filter(input => input.value === \"\").length === 0){\r\n        document.querySelector(\".submit\").disabled = true\r\n        fetch(`${process.env.REACT_APP_BACKEND_URL || \"https://ikim91-golf-tracker-api.herokuapp.com\"}/newcourse`, {\r\n          method: 'post',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            courseName: document.querySelector('input[name=\"courseName\"]').value,\r\n            totalHoles: document.querySelector('select[name=\"numOfHoles\"]').value,\r\n            rating: document.querySelector('input[name=\"courseRating\"]').value,\r\n            slope: document.querySelector('input[name=\"courseSlope\"]').value,\r\n            holes: Array.from(document.querySelectorAll('input[name=\"holeName\"]')).map(input => input.value),\r\n            par: (() =>{\r\n              let holes = Array.from(document.querySelectorAll('input[name=\"holeName\"]')).map(input => input.value)\r\n              let pars = Array.from(document.querySelectorAll('td input')).map(input => input.value)\r\n              let obj = {}\r\n              let start = 0\r\n              let finish = 9\r\n\r\n              for(let i = 0; i < holes.length; i++){\r\n                if(i=== 0){\r\n                  obj[holes[i]] = pars.slice(start, finish)\r\n                } else{\r\n                  start+=9\r\n                  finish+=9\r\n                  obj[holes[i]] = pars.slice(start, finish)\r\n                }\r\n              }\r\n\r\n              return obj\r\n\r\n            })()\r\n          })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n          if(data.status === \"SUCCESS\"){\r\n            console.log(data.status)\r\n            document.querySelector(\"#course-form\").reset()\r\n            document.querySelector(\".submit\").disabled = false\r\n          }\r\n        })\r\n        .then(() => onInitializingUserInfo())\r\n      }\r\n  }\r\n\r\n  const clearInputFields = (e) => {\r\n    const response = window.confirm(\"Are you sure?\")\r\n    if(response === true){\r\n      document.querySelector(\"#course-form\").reset()\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"addcourse-modal bg-light\">\r\n      <div className=\"addcourse-modal-exit text-success\" onClick={closeModal}>X</div>\r\n      <form id=\"course-form\">\r\n        <div className=\"add-course\">\r\n          <h2 className=\"text-success\">New Golf Course Info</h2>\r\n          <div className=\"course-info text-success\">\r\n            <div><label htmlFor=\"courseName\" type=\"text\">Course Name:</label></div>\r\n            <div><input name=\"courseName\" className=\"course-name text-success\" required/></div>\r\n            <div><label htmlFor=\"numOfHoles\">Number of Holes:</label></div>\r\n            <select name=\"numOfHoles\" id=\"numOfHoles\" className=\"holes text-success\" onChange={handleSelectChange} required>\r\n              <option></option>\r\n              <option>18</option>\r\n              <option>27</option>\r\n              <option>36</option>\r\n            </select>\r\n            <div><label htmlFor=\"courseRating\" type=\"text\">Course Rating:</label></div>\r\n            <div><input name=\"courseRating\" type=\"number\" className=\"course-rating text-success\" required/></div>\r\n            <div><label htmlFor=\"courseSlope\" type=\"text\">Course Slope:</label></div>\r\n            <div><input name=\"courseSlope\" type=\"number\" className=\"course-slope text-success\" required/></div>\r\n          </div>\r\n          <h2 className=\"scorecard-header text-success\">Enter Scorecard</h2>\r\n          {\r\n            (numOfHoles === \"18\" || numOfHoles === \"\") ? (\r\n              <div className=\"scorecard-table-18 text-success\">\r\n                <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                <table className=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">Hole</th>\r\n                      <td>1</td>\r\n                      <td>2</td>\r\n                      <td>3</td>\r\n                      <td>4</td>\r\n                      <td>5</td>\r\n                      <td>6</td>\r\n                      <td>7</td>\r\n                      <td>8</td>\r\n                      <td>9</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Par</th>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                <table className=\"table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">Hole</th>\r\n                      <td>1</td>\r\n                      <td>2</td>\r\n                      <td>3</td>\r\n                      <td>4</td>\r\n                      <td>5</td>\r\n                      <td>6</td>\r\n                      <td>7</td>\r\n                      <td>8</td>\r\n                      <td>9</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Par</th>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ) : (\r\n              (numOfHoles === \"27\") ? (\r\n                <div className=\"scorecard-table-27 text-success\">\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <div className=\"scorecard-table-36 text-success\">\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div><label htmlFor=\"holeName\" type=\"text\">Hole Name:</label><input name=\"holeName\" className=\"course-name text-success\" required/></div>\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">Hole</th>\r\n                        <td>1</td>\r\n                        <td>2</td>\r\n                        <td>3</td>\r\n                        <td>4</td>\r\n                        <td>5</td>\r\n                        <td>6</td>\r\n                        <td>7</td>\r\n                        <td>8</td>\r\n                        <td>9</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">Par</th>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                        <td><input type=\"number\" name=\"par\" min=\"3\" max=\"5\" required/></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n       <button type=\"button\" className=\"submit btn btn-success btn-lg mr-4\" onClick={submitData}>Add Course</button>\r\n       <button type=\"button\" className=\"reset-fields btn btn-success btn-lg ml-4\" onClick={clearInputFields}>Clear All</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourse);\r\n","import React from 'react';\r\n\r\nfunction ScoreCard(props){\r\n  return(\r\n    <div className=\"scorecard\">\r\n      <h2 className=\"text-success\">{props.hole}</h2>\r\n      <table className=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">Hole</th>\r\n            <td>1</td>\r\n            <td>2</td>\r\n            <td>3</td>\r\n            <td>4</td>\r\n            <td>5</td>\r\n            <td>6</td>\r\n            <td>7</td>\r\n            <td>8</td>\r\n            <td>9</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">Par</th>\r\n            {\r\n              props.par.map((p, i) => <td key={i}>{p}</td>)\r\n            }\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">Score</th>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n            <td><input type=\"number\" name=\"par-fill\" required/></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreCard;\r\n","import React from 'react';\r\nimport ScoreCard from './ScoreCard';\r\nimport moment from 'moment';\r\nimport { checkRoundInputFields, resetRoundInputFields } from './index';\r\nimport { connect } from 'react-redux';\r\nimport { updateCourse, updateHoles, updateBoxChecked, updateButtonClicked, initializingUserInfo } from './../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    courses: state.initializeUserInfo.courses,\r\n    setCourse: state.updateNewRoundState.setCourse,\r\n    holes: state.updateNewRoundState.holes,\r\n    buttonClicked: state.updateNewRoundState.buttonClicked,\r\n    boxChecked: state.updateNewRoundState.boxChecked\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onUpdateCourse: (course) => {\r\n      dispatch(updateCourse(course))\r\n    },\r\n    onUpdateHoles: (holes) => {\r\n      dispatch(updateHoles(holes))\r\n    },\r\n    onUpdateBoxChecked: (boxChecked) => {\r\n      dispatch(updateBoxChecked(boxChecked))\r\n    },\r\n    onUpdateButtonClicked: (buttonClicked) => {\r\n      dispatch(updateButtonClicked(buttonClicked))\r\n    },\r\n    onInitializingUserInfo: () => {\r\n      dispatch(initializingUserInfo())\r\n    }\r\n  }\r\n}\r\n\r\nfunction NewRound(props){\r\n\r\n  const { courses, setCourse, holes, buttonClicked, boxChecked, onUpdateCourse, onUpdateHoles, onUpdateBoxChecked, onUpdateButtonClicked, onInitializingUserInfo } = props\r\n\r\n  const closeModal = (e) => {\r\n    e.target.parentElement.style.visibility = \"hidden\";\r\n    document.querySelector(\"#new-round-form\").reset()\r\n    document.querySelector(\".carousel-indicators\").style.visibility = \"visible\";\r\n    resetRoundInputFields()\r\n    onUpdateButtonClicked(false)\r\n    onUpdateCourse({})\r\n    onUpdateBoxChecked(false)\r\n    onUpdateHoles([])\r\n  }\r\n\r\n  const onCourseSelect = (e) => {\r\n\r\n    onUpdateButtonClicked(false)\r\n    onUpdateCourse({})\r\n    onUpdateBoxChecked(false)\r\n    onUpdateHoles([])\r\n\r\n    if(e.target.value !== \"\"){\r\n      onUpdateCourse(courses.filter(course => course.courseName === e.target.value)[0])\r\n    } else{\r\n      onUpdateButtonClicked(false)\r\n      onUpdateCourse({})\r\n    }\r\n  }\r\n\r\n  const limitTo18Holes = (e) => {\r\n    const checkboxes = Array.from(document.querySelectorAll(\".check\")).filter(checkbox => checkbox.checked)\r\n\r\n    if(checkboxes.length > 2){\r\n      checkboxes.map((checkbox) => checkbox.checked = false)\r\n    }\r\n\r\n    if(checkboxes.length < 2){\r\n      onUpdateBoxChecked(false)\r\n    }\r\n\r\n    onUpdateHoles(checkboxes.map(checkbox => checkbox.nextSibling.textContent))\r\n  }\r\n\r\n  const onCheck = (e) => {\r\n    const checkboxes = Array.from(document.querySelectorAll(\".check\")).filter(checkbox => checkbox.checked)\r\n\r\n    if(e.target.checked){\r\n      if(checkboxes.length === 2){\r\n        onUpdateBoxChecked(true)\r\n      } else{\r\n        onUpdateBoxChecked(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOnButtonClick = () => {\r\n    if(setCourse){\r\n      if(!buttonClicked){\r\n        onUpdateButtonClicked(true)\r\n      } else{\r\n        onUpdateButtonClicked(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onLogRound = () => {\r\n    checkRoundInputFields()\r\n\r\n    if(Array.from(document.querySelectorAll(\"input[name='par-fill']\")).filter(input => input.value === \"\").length === 0){\r\n      document.querySelector(\".log-round\").disabled = true\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL || \"https://ikim91-golf-tracker-api.herokuapp.com\"}/newround`, {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          playedOn: document.querySelector(\".date\").value,\r\n          season: (document.querySelector(\".date\").value.split(\"-\")[0]),\r\n          course: document.querySelector(\".course-list\").value,\r\n          holes: Array.from(document.querySelectorAll(\".check\")).map(input => {\r\n            if(input.checked){\r\n              return input.nextSibling.innerText\r\n            }\r\n            return null\r\n          }).filter(item => item),\r\n          totalScore: Array.from(document.querySelectorAll(\"input[name='par-fill']\")).map(input => parseInt(input.value)).reduce((total, num) => total + num),\r\n          scores: (() => {\r\n            let holes = Array.from(document.querySelectorAll(\".check\")).map(input => {\r\n              if(input.checked){\r\n                return input.nextSibling.innerText\r\n              }\r\n              return null\r\n            }).filter(item => item)\r\n            let scores = Array.from(document.querySelectorAll(\"input[name='par-fill']\")).map(input => input.value)\r\n            let obj = {}\r\n            let start = 0\r\n            let finish = 9\r\n\r\n            for(let i = 0; i < holes.length; i++){\r\n              if(i=== 0){\r\n                obj[holes[i]] = scores.slice(start, finish)\r\n              } else{\r\n                start+=9\r\n                finish+=9\r\n                obj[holes[i]] = scores.slice(start, finish)\r\n              }\r\n            }\r\n            return obj\r\n          })()\r\n        })\r\n      }).then(res => res.json())\r\n      .then(data => {\r\n        document.querySelector(\".log-round\").disabled = false\r\n        document.querySelector(\"#new-round-form\").reset()\r\n        onUpdateButtonClicked(false)\r\n        onUpdateCourse({})\r\n        onUpdateButtonClicked(false)\r\n        onUpdateHoles([])\r\n      })\r\n      .then(() => onInitializingUserInfo())\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"new-round-modal bg-light\">\r\n      <div className=\"new-round-modal-exit text-success\" onClick={closeModal}>X</div>\r\n      <form id=\"new-round-form\">\r\n        <div className=\"new-round text-success\">\r\n          <h2 className=\"text-success\">Log New Round</h2>\r\n          <div className=\"add-new-round\">\r\n            <label htmlFor=\"course-list\" type=\"text\">Course Name:</label>\r\n            <select className=\"course-list text-success\" name=\"course-list\" defaultValue = \"\" onChange={onCourseSelect}>\r\n              <option></option>\r\n              {courses.map((course, i) => <option key={i}>{course.courseName}</option>)}\r\n            </select>\r\n            <label htmlFor=\"date\">Date: </label>\r\n            <input className=\"date text-success\" name=\"date\" type=\"date\" defaultValue={moment(new Date()).format('YYYY-MM-DD')}/>\r\n          </div>\r\n          <button type=\"button\" className=\"show-courses btn btn-success btn-lg m-1\" onClick={handleOnButtonClick}>Show Course</button>\r\n          {\r\n            (buttonClicked) ? (\r\n              <div className=\"show-scorecard\">\r\n                <h2 className=\"text-success mt-4\">Select Holes</h2>\r\n                <div className=\"checkboxes mb-4\">\r\n                  {\r\n                    setCourse.holes.map((hole, i) => <div className=\"checkbox\" key={i}><input className=\"check\" name=\"checkbox\" type=\"checkbox\" onChange={limitTo18Holes} onClick={onCheck}/><label className=\"check-label\" htmlFor=\"checkbox\">{hole}</label></div>)\r\n                  }\r\n                </div>\r\n                <div>\r\n                  {\r\n                    (boxChecked) ? (\r\n                      <div>\r\n                        {\r\n                          holes.map((hole, i) => <ScoreCard hole={hole} par={setCourse.par[hole]} key={i}/>)\r\n                        }\r\n                        <button type=\"button\" className=\"log-round btn btn-success btn-lg m-1\" onClick={onLogRound}>Log Round</button>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )\r\n          }\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRound);\r\n","import React, { useEffect } from 'react';\r\nimport Chart from 'chart.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    scoreCount: state.updateScoreCount.scoreCount\r\n  }\r\n}\r\n\r\nfunction AnalyticsBar(props){\r\n\r\n  const { scoreCount } = props\r\n\r\n  useEffect(() => {\r\n    const ctx = document.querySelector('#myBarChart')\r\n    new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: Object.keys(scoreCount).map(score => {\r\n          if(score === 'eagle'){\r\n            return (score.charAt(0).toUpperCase() + score.slice(1)) + \" or Better\"\r\n          } else if(score === 'quad'){\r\n            return (score.charAt(0).toUpperCase() + score.slice(1)) + \"riple or Worse\"\r\n          } else{\r\n            return score.charAt(0).toUpperCase() + score.slice(1)\r\n          }\r\n        }),\r\n        datasets: [{\r\n          data: Object.values(scoreCount),\r\n          backgroundColor: [\r\n            '#ff0000',\r\n            '#ff9900',\r\n            '#ffff00',\r\n            '#00cc00',\r\n            '#00ff99',\r\n            '#0000ff',\r\n            '#6600ff'\r\n          ]\r\n        }],\r\n\r\n      },\r\n      options: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n              },\r\n                ticks: {\r\n                    suggestedMin: 0,\r\n                    suggestedMax: 10\r\n                }\r\n            }]\r\n        }\r\n      }\r\n    })\r\n  }, [scoreCount])\r\n\r\n  return(\r\n    <div className=\"analytics\">\r\n      <div className=\"analytics-header text-success\"><h3>{`Golf Statistics: 2020`}</h3></div>\r\n      <div className=\"analytics-numbers-grid\">\r\n        <div className=\"analytics-numbers-items text-success border border-success\">&#8804;Eagle</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">Birdie</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">Par</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">Bogey</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">Double</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">Triple</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">&#8805;Quadriple</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.eagle}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.birdie}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.par}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.bogey}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.double}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.triple}`}</div>\r\n        <div className=\"analytics-numbers-items text-success border border-success\">{`${scoreCount.quad}`}</div>\r\n      </div>\r\n      <div className=\"analytics-plots\">\r\n        <canvas id=\"myBarChart\"></canvas>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnalyticsBar);\r\n","import React, { useEffect } from 'react';\r\nimport Chart from 'chart.js';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    linePlot: state.updateLinePlotState.linePlot\r\n  }\r\n}\r\n\r\nfunction AnalyticsLine(props){\r\n\r\n  const { linePlot } = props\r\n\r\n  useEffect(() => {\r\n    const ctx = document.querySelector('#myLineChart').getContext('2d')\r\n    new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: linePlot.xAxis.map((point) => moment(point).format('MMM DD')),\r\n        datasets: [{\r\n          data: linePlot.yAxis,\r\n          backgroundColor: 'rgba(102, 255, 102, 0.8)',\r\n          pointRadius: 5,\r\n          pointBorderColor: 'rgba(255, 255, 255, 1)'\r\n        }]\r\n      },\r\n      options: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              gridLines: {\r\n                color: \"rgba(0, 0, 0, 0)\",\r\n              },\r\n                ticks: {\r\n                    suggestedMin: 0,\r\n                    suggestedMax: 20\r\n                }\r\n            }]\r\n        }\r\n      }\r\n    })\r\n  }, [linePlot])\r\n\r\n  return(\r\n    <div className=\"analytics\">\r\n      <div className=\"analytics-header text-success\"><h3>{`Golf Scores: 2020`}</h3></div>\r\n      <div className=\"analytics-plots\">\r\n        <canvas id=\"myLineChart\"></canvas>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnalyticsLine);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    scorecard: state.updateScorecardState.scorecard\r\n  }\r\n}\r\n\r\nfunction AnalyticsScoreCard(props){\r\n\r\n  const { scorecard } = props\r\n\r\n  return(\r\n    <div className=\"analytics\">\r\n      <div className=\"analytics-header text-success\"><h3>{`Scorecard: 2020`}</h3></div>\r\n      <table className=\"analytics-scorecard\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th></th>\r\n          <th colSpan=\"18\">Hole</th>\r\n          <th></th>\r\n          <th></th>\r\n          <th></th>\r\n        </tr>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th className=\"analytics-scorecard-hole\">1</th>\r\n          <th className=\"analytics-scorecard-hole\">2</th>\r\n          <th className=\"analytics-scorecard-hole\">3</th>\r\n          <th className=\"analytics-scorecard-hole\">4</th>\r\n          <th className=\"analytics-scorecard-hole\">5</th>\r\n          <th className=\"analytics-scorecard-hole\">6</th>\r\n          <th className=\"analytics-scorecard-hole\">7</th>\r\n          <th className=\"analytics-scorecard-hole\">8</th>\r\n          <th className=\"analytics-scorecard-hole\">9</th>\r\n          <th className=\"analytics-scorecard-hole\">10</th>\r\n          <th className=\"analytics-scorecard-hole\">11</th>\r\n          <th className=\"analytics-scorecard-hole\">12</th>\r\n          <th className=\"analytics-scorecard-hole\">13</th>\r\n          <th className=\"analytics-scorecard-hole\">14</th>\r\n          <th className=\"analytics-scorecard-hole\">15</th>\r\n          <th className=\"analytics-scorecard-hole\">16</th>\r\n          <th className=\"analytics-scorecard-hole\">17</th>\r\n          <th className=\"analytics-scorecard-hole\">18</th>\r\n          <th className=\"analytics-scorecard-par\">Par</th>\r\n          <th className=\"analytics-scorecard-total\">Total</th>\r\n          <th className=\"analytics-scorecard-score\">Score</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {scorecard.map((score, index) => {\r\n          return(\r\n            <tr key={index}>{score.map((s, i) => {\r\n              if(i === 0){\r\n                return(\r\n                  <td key={i}>{moment(s).format('L')}</td>\r\n                )\r\n              } else{\r\n                return(\r\n                  <td key={i}>{s}</td>\r\n                )\r\n              }\r\n            })}</tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AnalyticsScoreCard);\r\n","import React from 'react';\r\nimport Indicators from './Indicators';\r\nimport AddCourse from './AddCourse';\r\nimport NewRound from './NewRound';\r\nimport AnalyticsBar from './AnalyticsBar';\r\nimport AnalyticsLine from './AnalyticsLine';\r\nimport AnalyticsScoreCard from './AnalyticsScoreCard';\r\nimport { connect } from 'react-redux';\r\nimport { updateSlide } from './../../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    slide: state.updateSlideNumber.slide\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    onUpdateSlide: (slide) => {\r\n      dispatch(updateSlide(slide))\r\n    }\r\n  }\r\n}\r\n\r\nfunction Carousel(props){\r\n\r\n  const { slide, onUpdateSlide } = props\r\n\r\n  const onNext = (e) => {\r\n    const newSlide = (slide + parseInt(e.target.getAttribute(\"value\")))\r\n\r\n    if(newSlide > 3){\r\n      return\r\n    } else{\r\n      onUpdateSlide(newSlide)\r\n    }\r\n  }\r\n\r\n  const onPrev = (e) => {\r\n    const newSlide = (slide + parseInt(e.target.getAttribute(\"value\")))\r\n\r\n    if(newSlide < 1){\r\n      return\r\n    } else{\r\n      onUpdateSlide(newSlide)\r\n    }\r\n  }\r\n\r\n  const renderSwitch = () => {\r\n    switch(slide){\r\n      case 1:\r\n        return(\r\n          <AnalyticsLine/>\r\n        )\r\n      case 2:\r\n        return(\r\n          <AnalyticsBar/>\r\n        )\r\n      case 3:\r\n        return(\r\n          <AnalyticsScoreCard/>\r\n        )\r\n      default:\r\n        return(\r\n          <AnalyticsBar/>\r\n        )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"carousel\">\r\n      <AddCourse/>\r\n      <NewRound/>\r\n      {renderSwitch()}\r\n      <Indicators/>\r\n      <div className=\"prev\" value=\"-1\" onClick={onPrev}>&#10094;</div>\r\n      <div className=\"next\" value=\"1\" onClick={onNext}>&#10095;</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Carousel);\r\n","import React from 'react';\r\nimport Carousel from './components/Carousel';\r\n\r\nimport './css/Content.css';\r\n\r\nfunction Content(){\r\n  return(\r\n    <div className=\"content bg-light border-dark\">\r\n      <Carousel/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport UserInfo from './UserInfo';\r\nimport Content from './Content';\r\n\r\nimport './css/Main.css';\r\n\r\nclass Main extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className=\"main bg-dark\">\r\n        <div className=\"main-header\">\r\n          <Header/>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          <UserInfo/>\r\n          <Content/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from './containers/Main';\nimport { connect } from 'react-redux';\nimport { initializingUserInfo } from './actions';\n\nconst mapStateToProps = (state) => {\n  return{\n    courses: state.initializeUserInfo.courses,\n    isPending: state.initializeUserInfo.isPending\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    onInitializingUserInfo: () => {\n      dispatch(initializingUserInfo())\n    }\n  }\n}\n\nfunction App(props) {\n\n  const { onInitializingUserInfo } = props\n\n  useEffect(()=> {\n    window.onload = () => {\n      onInitializingUserInfo()\n    }\n  })\n\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initialStateUserInfo = {\r\n  user: {\r\n    username: \"N/A\",\r\n    seasons: [{\r\n      season: \"N/A\",\r\n      handicap: \"N/A\",\r\n      lowest: \"N/A\",\r\n      average: \"N/A\",\r\n      highest: \"N/A\",\r\n      rounds: \"N/A\",\r\n      courses: \"N/A\",\r\n    }]\r\n  },\r\n  courses: [{\r\n    courseName: \"\",\r\n    totalHoles: 0,\r\n    holes: [],\r\n    par:{},\r\n    rating: 0,\r\n    slope: 0\r\n  }],\r\n  isPending: false,\r\n  error: \"\"\r\n}\r\n\r\nexport const initializeUserInfo = (state = initialStateUserInfo, action={}) => {\r\n  switch(action.type){\r\n    case \"GET_PENDING\":\r\n      return Object.assign({}, state, {isPending: true})\r\n    case \"GET_SUCCESS\":\r\n      return Object.assign({}, state, {user: action.payload.user, courses: action.payload.courses, isPending: false})\r\n    case \"POST_SUCCESS\":\r\n      return Object.assign({}, state, {user: action.payload.user, courses: action.payload.courses, isPending: false})\r\n    case \"GET_ERROR\":\r\n      return Object.assign({}, state, {error: action.payload, isPending: false})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialNewRoundState = {\r\n  setCourse: {},\r\n  holes: [],\r\n  buttonClicked: false,\r\n  boxChecked: false\r\n}\r\n\r\nexport const updateNewRoundState = (state = initialNewRoundState, action={}) => {\r\n  switch(action.type){\r\n    case \"SET_COURSE\":\r\n      return Object.assign({}, state, { setCourse: action.payload })\r\n    case \"SET_HOLES\":\r\n      return Object.assign({}, state, { holes: action.payload })\r\n    case \"BUTTON_CLICKED\":\r\n      return Object.assign({}, state, { buttonClicked: action.payload })\r\n    case \"BOX_CHECKED\":\r\n      return Object.assign({}, state, { boxChecked: action.payload })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialInputYearState = {\r\n  year: (new Date().getFullYear())\r\n}\r\n\r\nexport const updateInputDate = (state = initialInputYearState, action={}) => {\r\n  switch(action.type){\r\n    case \"CHANGE_DATE\":\r\n      return Object.assign({}, state, { year: action.payload.year })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialSlideState = {\r\n  slide: 1,\r\n  slides: [1,2,3]\r\n}\r\n\r\nexport const updateSlideNumber = (state = initialSlideState, action={}) => {\r\n  switch(action.type){\r\n    case \"CHANGE_SLIDE\":\r\n      return Object.assign({}, state, { slide: action.payload })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialScoreCountState = {\r\n  scoreCount: {\r\n    \"eagle\": 0,\r\n    \"birdie\": 0,\r\n    \"par\": 0,\r\n    \"bogey\": 0,\r\n    \"double\": 0,\r\n    \"triple\": 0,\r\n    \"quad\": 0\r\n  }\r\n}\r\n\r\nexport const updateScoreCount = (state = initialScoreCountState, action={}) => {\r\n  switch(action.type){\r\n    case \"CHANGE_SCORE_COUNT\":\r\n      return Object.assign({}, state, { scoreCount: action.payload.scoreCount })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialLinePlotState = {\r\n  linePlot: {\r\n    yAxis: [],\r\n    xAxis: []\r\n  }\r\n}\r\n\r\nexport const updateLinePlotState = (state = initialLinePlotState, action = {}) => {\r\n  switch(action.type){\r\n    case \"CHANGE_LINE_PLOT_STATE\":\r\n      return Object.assign({}, state, { linePlot: action.payload.linePlot })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialScorecardState = {\r\n  scorecard: [[ (new Date()).toLocaleDateString(), \"GOLF COURSE\", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]],\r\n}\r\n\r\nexport const updateScorecardState = (state = initialScorecardState, action = {}) =>{\r\n  switch(action.type){\r\n    case \"CHANGE_SCORECARD_STATE\":\r\n      return Object.assign({}, state, { scorecard: action.payload.scorecard })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { initializeUserInfo, updateNewRoundState, updateInputDate, updateSlideNumber, updateScoreCount, updateLinePlotState, updateScorecardState } from './reducers';\n\nconst rootReducer = combineReducers({ initializeUserInfo, updateNewRoundState, updateInputDate, updateSlideNumber, updateScoreCount, updateLinePlotState, updateScorecardState })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}